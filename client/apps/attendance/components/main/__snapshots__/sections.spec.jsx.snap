// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sections matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <sections
    currentSection={-1}
    filterStudents={[Function]}
    sections={
      Array [
        Object {
          "course_id": 1,
          "id": 1,
          "name": "Sec1",
        },
        Object {
          "course_id": 1,
          "id": 2,
          "name": "Sec2",
        },
        Object {
          "course_id": 1,
          "id": 3,
          "name": "Sec3",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Dropdown
        baseClassName="Dropdown"
        onChange={[Function]}
        options={
          Array [
            Object {
              "label": "Sec1",
              "value": 1,
            },
            Object {
              "label": "Sec2",
              "value": 2,
            },
            Object {
              "label": "Sec3",
              "value": 3,
            },
          ]
        }
        value="All Sections"
      />,
      "className": "c-btn c-btn--sections",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "baseClassName": "Dropdown",
        "onChange": [Function],
        "options": Array [
          Object {
            "label": "Sec1",
            "value": 1,
          },
          Object {
            "label": "Sec2",
            "value": 2,
          },
          Object {
            "label": "Sec3",
            "value": 3,
          },
        ],
        "value": "All Sections",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Dropdown
          baseClassName="Dropdown"
          onChange={[Function]}
          options={
            Array [
              Object {
                "label": "Sec1",
                "value": 1,
              },
              Object {
                "label": "Sec2",
                "value": 2,
              },
              Object {
                "label": "Sec3",
                "value": 3,
              },
            ]
          }
          value="All Sections"
        />,
        "className": "c-btn c-btn--sections",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "baseClassName": "Dropdown",
          "onChange": [Function],
          "options": Array [
            Object {
              "label": "Sec1",
              "value": 1,
            },
            Object {
              "label": "Sec2",
              "value": 2,
            },
            Object {
              "label": "Sec3",
              "value": 3,
            },
          ],
          "value": "All Sections",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
