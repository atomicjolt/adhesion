// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Scorm Analytics Average Score matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AverageScore
    highScore={20}
    lowScore={18}
    meanScore={12}
    medScore={15}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <ScoreLabel
          name="Mean Score"
          value={12}
/>,
        <ScoreLabel
          name="Median Score"
          value={15}
/>,
        <ScoreLabel
          name="Lowest Score"
          value={18}
/>,
        <ScoreLabel
          name="Highest Score"
          value={20}
/>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "name": "Mean Score",
          "value": 12,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "name": "Median Score",
          "value": 15,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "name": "Lowest Score",
          "value": 18,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "function",
        "props": Object {
          "name": "Highest Score",
          "value": 20,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ScoreLabel
            name="Mean Score"
            value={12}
/>,
          <ScoreLabel
            name="Median Score"
            value={15}
/>,
          <ScoreLabel
            name="Lowest Score"
            value={18}
/>,
          <ScoreLabel
            name="Highest Score"
            value={20}
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "name": "Mean Score",
            "value": 12,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "name": "Median Score",
            "value": 15,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "name": "Lowest Score",
            "value": 18,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "function",
          "props": Object {
            "name": "Highest Score",
            "value": 20,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
