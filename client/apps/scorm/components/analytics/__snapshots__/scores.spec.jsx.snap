// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Scorm Analytics Scores matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AverageScore
    scores={
      Array [
        Object {
          "name": "test application",
          "value": "12",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <ScoreLabel
          name="test application"
          value="12"
        />,
      ],
      "style": Object {
        "position": "absolute",
        "right": "5rem",
        "top": "2rem",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "scores_test application",
        "nodeType": "function",
        "props": Object {
          "name": "test application",
          "value": "12",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ScoreLabel
            name="test application"
            value="12"
          />,
        ],
        "style": Object {
          "position": "absolute",
          "right": "5rem",
          "top": "2rem",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "scores_test application",
          "nodeType": "function",
          "props": Object {
            "name": "test application",
            "value": "12",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
