// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Scorm Analytics AnalyticRow first example renders 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <tr
    className="c-aa-row c-aa-accordion is-open"
    onClick={[Function]}
    style={
        Object {
            "cursor": "pointer",
          }
    }
>
    <td
        style={
            Object {
                "paddingLeft": "8rem",
              }
        }
    >
        <i
            className="material-icons"
            style={
                Object {
                    "left": "5.3rem",
                  }
            }
        >
            arrow_drop_down
        </i>
        test application
    </td>
    <td>
        Passed
    </td>
    <td>
        12%
    </td>
    <td>
        59s
    </td>
</tr>,
  "nodes": Array [
    <tr
      className="c-aa-row c-aa-accordion is-open"
      onClick={[Function]}
      style={
            Object {
                  "cursor": "pointer",
                }
      }
>
      <td
            style={
                  Object {
                        "paddingLeft": "8rem",
                      }
            }
      >
            <i
                  className="material-icons"
                  style={
                        Object {
                              "left": "5.3rem",
                            }
                  }
            >
                  arrow_drop_down
            </i>
            test application
      </td>
      <td>
            Passed
      </td>
      <td>
            12%
      </td>
      <td>
            59s
      </td>
</tr>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <AnalyticRow
        depth={2}
        id={1}
        isParent={true}
        name="test application"
        passed="Passed"
        score={0.12}
        show={true}
        tableRowClicked={[Function]}
        time={59}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": AnalyticRow {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "depth": 2,
          "id": 1,
          "isParent": true,
          "name": "test application",
          "passed": "Passed",
          "score": 0.12,
          "show": true,
          "tableRowClicked": [Function],
          "time": 59,
        },
        "refs": Object {},
        "state": Object {
          "isOpen": true,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <tr
          className="c-aa-row c-aa-accordion is-open"
          onClick={[Function]}
          style={
                    Object {
                              "cursor": "pointer",
                            }
          }
>
          <td
                    style={
                              Object {
                                        "paddingLeft": "8rem",
                                      }
                    }
          >
                    <i
                              className="material-icons"
                              style={
                                        Object {
                                                  "left": "5.3rem",
                                                }
                              }
                    >
                              arrow_drop_down
                    </i>
                    test application
          </td>
          <td>
                    Passed
          </td>
          <td>
                    12%
          </td>
          <td>
                    59s
          </td>
</tr>,
        "_debugID": 2,
        "_renderedOutput": <tr
          className="c-aa-row c-aa-accordion is-open"
          onClick={[Function]}
          style={
                    Object {
                              "cursor": "pointer",
                            }
          }
>
          <td
                    style={
                              Object {
                                        "paddingLeft": "8rem",
                                      }
                    }
          >
                    <i
                              className="material-icons"
                              style={
                                        Object {
                                                  "left": "5.3rem",
                                                }
                              }
                    >
                              arrow_drop_down
                    </i>
                    test application
          </td>
          <td>
                    Passed
          </td>
          <td>
                    12%
          </td>
          <td>
                    59s
          </td>
</tr>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <AnalyticRow
    depth={2}
    id={1}
    isParent={true}
    name="test application"
    passed="Passed"
    score={0.12}
    show={true}
    tableRowClicked={[Function]}
    time={59}
/>,
}
`;
