// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Scorm Analytics Header Scorm Analytics Header renders 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <header
    className="c-aa-head"
>
    <Link
        className="c-aa-back-btn"
        onlyActiveOnIndex={false}
        style={Object {}}
        to={
            Object {
                "pathname": "/",
                "query": Object {
                  "noSync": true,
                },
              }
        }
    >
        <i
            className="material-icons"
        >
            arrow_back
        </i>
    </Link>
    <h1
        className="c-aa-title"
    >
        <span
            className="c-aa-title-btn"
            onClick={[Function]}
        >
            test application Analytics
        </span>
         / Student
    </h1>
    <button
        className="c-aa-btn"
        onClick={[Function]}
    >
        View Course Activities
    </button>
</header>,
  "nodes": Array [
    <header
      className="c-aa-head"
>
      <Link
            className="c-aa-back-btn"
            onlyActiveOnIndex={false}
            style={Object {}}
            to={
                  Object {
                        "pathname": "/",
                        "query": Object {
                          "noSync": true,
                        },
                      }
            }
      >
            <i
                  className="material-icons"
            >
                  arrow_back
            </i>
      </Link>
      <h1
            className="c-aa-title"
      >
            <span
                  className="c-aa-title-btn"
                  onClick={[Function]}
            >
                  test application Analytics
            </span>
             / Student
      </h1>
      <button
            className="c-aa-btn"
            onClick={[Function]}
      >
            View Course Activities
      </button>
</header>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Header
        studentName="Student"
        switchView={[Function]}
        title="test application"
        view="course"
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Header {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "studentName": "Student",
          "switchView": [Function],
          "title": "test application",
          "view": "course",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <header
          className="c-aa-head"
>
          <Link
                    className="c-aa-back-btn"
                    onlyActiveOnIndex={false}
                    style={Object {}}
                    to={
                              Object {
                                        "pathname": "/",
                                        "query": Object {
                                          "noSync": true,
                                        },
                                      }
                    }
          >
                    <i
                              className="material-icons"
                    >
                              arrow_back
                    </i>
          </Link>
          <h1
                    className="c-aa-title"
          >
                    <span
                              className="c-aa-title-btn"
                              onClick={[Function]}
                    >
                              test application Analytics
                    </span>
                     / Student
          </h1>
          <button
                    className="c-aa-btn"
                    onClick={[Function]}
          >
                    View Course Activities
          </button>
</header>,
        "_debugID": 2,
        "_renderedOutput": <header
          className="c-aa-head"
>
          <Link
                    className="c-aa-back-btn"
                    onlyActiveOnIndex={false}
                    style={Object {}}
                    to={
                              Object {
                                        "pathname": "/",
                                        "query": Object {
                                          "noSync": true,
                                        },
                                      }
                    }
          >
                    <i
                              className="material-icons"
                    >
                              arrow_back
                    </i>
          </Link>
          <h1
                    className="c-aa-title"
          >
                    <span
                              className="c-aa-title-btn"
                              onClick={[Function]}
                    >
                              test application Analytics
                    </span>
                     / Student
          </h1>
          <button
                    className="c-aa-btn"
                    onClick={[Function]}
          >
                    View Course Activities
          </button>
</header>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Header
    studentName="Student"
    switchView={[Function]}
    title="test application"
    view="course"
/>,
}
`;
