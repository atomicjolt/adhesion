// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Scorm Analytics ChartContainer passed charts matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ChartContainer
    data={
      Object {
        "passFail": Array [],
      }
    }
    selected="passed"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Chart
        colors={
          Array [
            "#67a9cf",
            "#c9c9c9",
            "#ef8a62",
          ]
        }
        data={Array []}
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "colors": Array [
          "#67a9cf",
          "#c9c9c9",
          "#ef8a62",
        ],
        "data": Array [],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Chart
          colors={
            Array [
              "#67a9cf",
              "#c9c9c9",
              "#ef8a62",
            ]
          }
          data={Array []}
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "colors": Array [
            "#67a9cf",
            "#c9c9c9",
            "#ef8a62",
          ],
          "data": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
