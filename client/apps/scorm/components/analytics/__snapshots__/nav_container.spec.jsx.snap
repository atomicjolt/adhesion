// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Scorm Analytics NavContainer match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NavButtons
    navButtons={
        Array [
            Object {
              "name": "test application",
              "stat": "12",
            },
          ]
    }
    switchChart={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <NavButton
          activeBtn="complete"
          label="test application"
          setActive={[Function]}
          stat="12"
          type={undefined}
/>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "nav_button_test application",
        "nodeType": "function",
        "props": Object {
          "activeBtn": "complete",
          "label": "test application",
          "setActive": [Function],
          "stat": "12",
          "type": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <NavButton
            activeBtn="complete"
            label="test application"
            setActive={[Function]}
            stat="12"
            type={undefined}
/>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "nav_button_test application",
          "nodeType": "function",
          "props": Object {
            "activeBtn": "complete",
            "label": "test application",
            "setActive": [Function],
            "stat": "12",
            "type": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
