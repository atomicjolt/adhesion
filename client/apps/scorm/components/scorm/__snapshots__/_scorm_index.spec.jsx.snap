// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`scorm index matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ScormIndex
    canvasAssignments={Object {}}
    canvasRequest={[Function]}
    canvasUrl="salad.com"
    hideModal={[Function]}
    listAssignmentsDone={true}
    lmsCourseId="1"
    loadError={false}
    loadPackages={[Function]}
    previewPackage={[Function]}
    removeError={[Function]}
    removePackage={[Function]}
    replacePackage={[Function]}
    scormFile={null}
    scormList={Array []}
    shouldRefreshList={false}
    showModal={[Function]}
    updateImportType={[Function]}
    uploadPackage={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <h2>
        Loading...
      </h2>,
      "className": "o-main-contain",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Loading...",
      },
      "ref": null,
      "rendered": "Loading...",
      "type": "h2",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <h2>
          Loading...
        </h2>,
        "className": "o-main-contain",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Loading...",
        },
        "ref": null,
        "rendered": "Loading...",
        "type": "h2",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
