// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Quiz Converter matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <QuizConverter
    conversionInProgress={false}
    importQuiz={[Function]}
    lmsCourseId="1"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="c-title"
>
          Quiz Upload
</h1>,
        <form
          onSubmit={[Function]}
>
          <FileUploadButton
                    htmlId="quiz"
                    selectFile={[Function]}
                    text="CHOOSE A QUIZ"
          />
          <div
                    className="c-and"
          >
                    --- AND ---
          </div>
          <FileUploadButton
                    htmlId="key"
                    selectFile={[Function]}
                    text="CHOOSE AN ANSWER KEY"
          />
          <ErrorMessage
                    error={undefined}
          />
          <UploadButton
                    canSubmit={false}
                    isConverting={false}
          />
</form>,
      ],
      "className": "c-contain",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Quiz Upload",
          "className": "c-title",
        },
        "ref": null,
        "rendered": "Quiz Upload",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <FileUploadButton
              htmlId="quiz"
              selectFile={[Function]}
              text="CHOOSE A QUIZ"
/>,
            <div
              className="c-and"
>
              --- AND ---
</div>,
            <FileUploadButton
              htmlId="key"
              selectFile={[Function]}
              text="CHOOSE AN ANSWER KEY"
/>,
            <ErrorMessage
              error={undefined}
/>,
            <UploadButton
              canSubmit={false}
              isConverting={false}
/>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "htmlId": "quiz",
              "selectFile": [Function],
              "text": "CHOOSE A QUIZ",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "--- AND ---",
              "className": "c-and",
            },
            "ref": null,
            "rendered": "--- AND ---",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "htmlId": "key",
              "selectFile": [Function],
              "text": "CHOOSE AN ANSWER KEY",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "error": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "canSubmit": false,
              "isConverting": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="c-title"
>
            Quiz Upload
</h1>,
          <form
            onSubmit={[Function]}
>
            <FileUploadButton
                        htmlId="quiz"
                        selectFile={[Function]}
                        text="CHOOSE A QUIZ"
            />
            <div
                        className="c-and"
            >
                        --- AND ---
            </div>
            <FileUploadButton
                        htmlId="key"
                        selectFile={[Function]}
                        text="CHOOSE AN ANSWER KEY"
            />
            <ErrorMessage
                        error={undefined}
            />
            <UploadButton
                        canSubmit={false}
                        isConverting={false}
            />
</form>,
        ],
        "className": "c-contain",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Quiz Upload",
            "className": "c-title",
          },
          "ref": null,
          "rendered": "Quiz Upload",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <FileUploadButton
                htmlId="quiz"
                selectFile={[Function]}
                text="CHOOSE A QUIZ"
/>,
              <div
                className="c-and"
>
                --- AND ---
</div>,
              <FileUploadButton
                htmlId="key"
                selectFile={[Function]}
                text="CHOOSE AN ANSWER KEY"
/>,
              <ErrorMessage
                error={undefined}
/>,
              <UploadButton
                canSubmit={false}
                isConverting={false}
/>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "htmlId": "quiz",
                "selectFile": [Function],
                "text": "CHOOSE A QUIZ",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "--- AND ---",
                "className": "c-and",
              },
              "ref": null,
              "rendered": "--- AND ---",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "htmlId": "key",
                "selectFile": [Function],
                "text": "CHOOSE AN ANSWER KEY",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "error": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "canSubmit": false,
                "isConverting": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
