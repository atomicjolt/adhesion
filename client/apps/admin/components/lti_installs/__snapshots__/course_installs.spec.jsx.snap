// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`lti installs course install matches the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CourseInstalls
    applicationInstance={
        Object {
            "lti_config_xml": "lti_config_xml",
            "lti_key": "lti_key",
            "lti_secret": "lti_secret",
            "name": "application_name",
          }
    }
    canvasRequest={[Function]}
    courseId={123}
    courseName="courseName"
    courses={Array []}
    installedTool={
        Object {
            "id": 12,
          }
    }
    loadingCourses={
        Object {
            "courseId": "id",
            "courseName": "name",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": null,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <thead>
          <tr>
                    <th>
                              <span>
                                        Course Name
                              </span>
                    </th>
                    <th />
          </tr>
</thead>,
        <tbody />,
      ],
      "className": "c-table c-table--installs",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": <tr>
            <th>
                        <span>
                                    Course Name
                        </span>
            </th>
            <th />
</tr>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <th>
                <span>
                                Course Name
                </span>
</th>,
              <th />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {
                "children": <span>
                  Course Name
</span>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": "Course Name",
                },
                "ref": null,
                "rendered": "Course Name",
                "type": "span",
              },
              "type": "th",
            },
            Object {
              "instance": null,
              "key": null,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "th",
            },
          ],
          "type": "tr",
        },
        "type": "thead",
      },
      Object {
        "instance": null,
        "key": null,
        "nodeType": "host",
        "props": Object {
          "children": null,
        },
        "ref": null,
        "rendered": null,
        "type": "tbody",
      },
    ],
    "type": "table",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": null,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <thead>
            <tr>
                        <th>
                                    <span>
                                                Course Name
                                    </span>
                        </th>
                        <th />
            </tr>
</thead>,
          <tbody />,
        ],
        "className": "c-table c-table--installs",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": <tr>
              <th>
                            <span>
                                          Course Name
                            </span>
              </th>
              <th />
</tr>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": null,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <th>
                  <span>
                                    Course Name
                  </span>
</th>,
                <th />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {
                  "children": <span>
                    Course Name
</span>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": null,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Course Name",
                  },
                  "ref": null,
                  "rendered": "Course Name",
                  "type": "span",
                },
                "type": "th",
              },
              Object {
                "instance": null,
                "key": null,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "th",
              },
            ],
            "type": "tr",
          },
          "type": "thead",
        },
        Object {
          "instance": null,
          "key": null,
          "nodeType": "host",
          "props": Object {
            "children": null,
          },
          "ref": null,
          "rendered": null,
          "type": "tbody",
        },
      ],
      "type": "table",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactFifteenAdapter {
      "options": Object {
        "supportPrevContextArgumentOfComponentDidUpdate": true,
      },
    },
  },
}
`;
